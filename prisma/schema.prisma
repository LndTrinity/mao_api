generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String      @id @default(uuid()) @db.VarChar(36)
  nome         String      @db.VarChar(60)
  email        String      @unique @db.VarChar(60)
  senha        String      @db.VarChar(60)
  tipo         TipoUsuario
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  prestador    Prestador?
  prestadorId  Int?
  reservas     Reserva[]
  avaliacoes   Avaliacao[]
  @@map("usuarios")
}

model Prestador {
  id          Int         @id @default(autoincrement())
  usuario     Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId   String      @db.VarChar(36) @unique
  descricao   String?     @db.VarChar(255)
  servicos    Servico[]
  avaliacoes  Avaliacao[]
  @@map("prestadores")
}

model Servico {
  id          Int         @id @default(autoincrement())
  nome        String      @db.VarChar(60)
  descricao   String?     @db.VarChar(255)
  preco       Decimal     @db.Decimal(10, 2)
  prestador   Prestador   @relation(fields: [prestadorId], references: [id])
  prestadorId Int
  reservas    Reserva[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  @@map("servicos")
}

model Reserva {
  id          Int         @id @default(autoincrement())
  usuario     Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId   String      @db.VarChar(36)
  servico     Servico     @relation(fields: [servicoId], references: [id])
  servicoId   Int
  data        DateTime
  status      StatusReserva @default(PENDENTE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  @@map("reservas")
}

model Avaliacao {
  id          Int         @id @default(autoincrement())
  usuario     Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId   String      @db.VarChar(36)
  prestador   Prestador   @relation(fields: [prestadorId], references: [id])
  prestadorId Int
  servicoId   Int
  nota        Int         @db.SmallInt
  comentario  String?     @db.VarChar(255)
  createdAt   DateTime    @default(now())
  @@map("avaliacoes")
}

enum TipoUsuario {
  CLIENTE
  PRESTADOR
}

enum StatusReserva {
  PENDENTE
  CONFIRMADA
  CANCELADA
}